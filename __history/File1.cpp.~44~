#include <iostream>
#include <tchar.h>
#include "ClientTCP.h"
#include <fstream>
#include <sstream>
#include <string.h>
#include <windows.h>
#include <string>

using namespace std;
int main(){

	ClientTCP client;
	char identifiant[10];
	char reponse[50];
	//client.SeConnecterAUnServeur("172.20.21.9",2025);

//	///////////////////////////////////////////Choisir un identifiant  et communiquer avec le serv/////////////////////////////////
//	cout<<"Ecrire l'identifiant souhaite :"<<endl;
//	cin>>identifiant;
//
//	//Envoie fde l'identifiant
//	client.Envoyer(identifiant,strlen(identifiant));
//
//	//Réception de la réponse
//	client.Recevoir(reponse,50);
//	cout<<reponse<<endl;
//
//	//Envoyer message serveur direct
//	while (true)
//	{
//		char donnees[30];
//		cout<<"Ecire la trame a envoyer : (ex 115 [ 4 octets ] : 0800000000000000)"<<endl;
//		cin.getline(donnees,1000);
//		client.Envoyer(donnees);
//		cin.get();
//	}
//	///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
//
//
//
//	/////////////////////////////////////////////////Ouverture JSON////////////////////////////////////////////////////////////////
//	ifstream fichier;
//	fichier.open("data.txt");
//	if (!fichier) {
//		cout << "Erreur: impossible d'ouvrir le fichier" << endl;
//		system("pause");
//		return 1;
//	}
//
//	// Lit et affiche le contenu du fichier
//	string ligne;
//	cout << "Contenu du fichier JSON:" << endl;
//	while (getline(fichier, ligne)) {
//		cout << ligne << endl;
//	}
//	fichier.close();
//	system("pause");
//	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


	/////////////////////////////////////////////Requet GET//////////////////////////////////////////////////////////////////////
	client.SeConnecterAUnServeur("172.18.110.111",3000);
	Sleep(1000);
	string requete="GET /api/significations HTTP/1.1\r\nHost: 172.18.110.111:3000\r\nConnection: keep-alive\r\n\r\n";
	cout<<requete<<endl;
	client.Envoyer(requete);
	client.Recevoir(reponse,1000);
	cout<<reponse;
	cin.get();
	client.SeDeconnecter();



	return 0;
}





